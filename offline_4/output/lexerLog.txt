Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme foo
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme a
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme b
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <IF> Lexeme if
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <ID> Lexeme a
Line# 2: Token <ADDOP> Lexeme +
Line# 2: Token <ID> Lexeme b
Line# 2: Token <CONST_INT> Lexeme 5
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 3: Token <RETURN> Lexeme return
Line# 3: Token <CONST_INT> Lexeme 7
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <RCURL> Lexeme }
Line# 5: Token <RETURN> Lexeme return
Line# 5: Token <ID> Lexeme foo
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme a
Line# 5: Token <ADDOP> Lexeme -
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme b
Line# 5: Token <ADDOP> Lexeme -
Line# 5: Token <CONST_INT> Lexeme 1
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <ADDOP> Lexeme +
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <MULOP> Lexeme *
Line# 5: Token <ID> Lexeme foo
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme a
Line# 5: Token <ADDOP> Lexeme -
Line# 5: Token <CONST_INT> Lexeme 1
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme b
Line# 5: Token <ADDOP> Lexeme -
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RCURL> Lexeme }
Line# 9: Token <INT> Lexeme int
Line# 9: Token <ID> Lexeme main
Line# 9: Token <LPAREN> Lexeme (
Line# 9: Token <RPAREN> Lexeme )
Line# 9: Token <LCURL> Lexeme {
Line# 10: Token <INT> Lexeme int
Line# 10: Token <ID> Lexeme i
Line# 10: Token <COMMA> Lexeme ,
Line# 10: Token <ID> Lexeme j
Line# 10: Token <COMMA> Lexeme ,
Line# 10: Token <ID> Lexeme k
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 11: Token <ID> Lexeme i
Line# 11: Token <ASSIGNOP> Lexeme =
Line# 11: Token <CONST_INT> Lexeme 7
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <ID> Lexeme j
Line# 12: Token <ASSIGNOP> Lexeme =
Line# 12: Token <CONST_INT> Lexeme 3
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 14: Token <ID> Lexeme k
Line# 14: Token <ASSIGNOP> Lexeme =
Line# 14: Token <ID> Lexeme foo
Line# 14: Token <LPAREN> Lexeme (
Line# 14: Token <ID> Lexeme i
Line# 14: Token <COMMA> Lexeme ,
Line# 14: Token <ID> Lexeme j
Line# 14: Token <RPAREN> Lexeme )
Line# 14: Token <SEMICOLON> Lexeme ;
Line# 15: Token <PRINTLN> Lexeme println
Line# 15: Token <LPAREN> Lexeme (
Line# 15: Token <ID> Lexeme k
Line# 15: Token <RPAREN> Lexeme )
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 17: Token <RETURN> Lexeme return
Line# 17: Token <CONST_INT> Lexeme 0
Line# 17: Token <SEMICOLON> Lexeme ;
Line# 18: Token <RCURL> Lexeme }
