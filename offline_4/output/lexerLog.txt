Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme f
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme a
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme k
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme k
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <WHILE> Lexeme while
Line# 4: Token <LPAREN> Lexeme (
Line# 4: Token <ID> Lexeme k
Line# 4: Token <CONST_INT> Lexeme 0
Line# 4: Token <RPAREN> Lexeme )
Line# 4: Token <LCURL> Lexeme {
Line# 5: Token <ID> Lexeme a
Line# 5: Token <INCOP> Lexeme ++
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme k
Line# 6: Token <DECOP> Lexeme --
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 3
Line# 8: Token <MULOP> Lexeme *
Line# 8: Token <ID> Lexeme a
Line# 8: Token <ADDOP> Lexeme -
Line# 8: Token <CONST_INT> Lexeme 7
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme a
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 9
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 12: Token <INT> Lexeme int
Line# 12: Token <ID> Lexeme g
Line# 12: Token <LPAREN> Lexeme (
Line# 12: Token <INT> Lexeme int
Line# 12: Token <ID> Lexeme a
Line# 12: Token <COMMA> Lexeme ,
Line# 12: Token <INT> Lexeme int
Line# 12: Token <ID> Lexeme b
Line# 12: Token <RPAREN> Lexeme )
Line# 12: Token <LCURL> Lexeme {
Line# 14: Token <INT> Lexeme int
Line# 14: Token <ID> Lexeme x
Line# 14: Token <COMMA> Lexeme ,
Line# 14: Token <ID> Lexeme i
Line# 14: Token <SEMICOLON> Lexeme ;
Line# 15: Token <ID> Lexeme x
Line# 15: Token <ASSIGNOP> Lexeme =
Line# 15: Token <ID> Lexeme f
Line# 15: Token <LPAREN> Lexeme (
Line# 15: Token <ID> Lexeme a
Line# 15: Token <RPAREN> Lexeme )
Line# 15: Token <ADDOP> Lexeme +
Line# 15: Token <ID> Lexeme a
Line# 15: Token <ADDOP> Lexeme +
Line# 15: Token <ID> Lexeme b
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 17: Token <FOR> Lexeme for
Line# 17: Token <LPAREN> Lexeme (
Line# 17: Token <ID> Lexeme i
Line# 17: Token <ASSIGNOP> Lexeme =
Line# 17: Token <CONST_INT> Lexeme 0
Line# 17: Token <SEMICOLON> Lexeme ;
Line# 17: Token <ID> Lexeme i
Line# 17: Token <CONST_INT> Lexeme 7
Line# 17: Token <SEMICOLON> Lexeme ;
Line# 17: Token <ID> Lexeme i
Line# 17: Token <INCOP> Lexeme ++
Line# 17: Token <RPAREN> Lexeme )
Line# 17: Token <LCURL> Lexeme {
Line# 18: Token <IF> Lexeme if
Line# 18: Token <LPAREN> Lexeme (
Line# 18: Token <ID> Lexeme i
Line# 18: Token <MULOP> Lexeme %
Line# 18: Token <CONST_INT> Lexeme 3
Line# 18: Token <CONST_INT> Lexeme 0
Line# 18: Token <RPAREN> Lexeme )
Line# 18: Token <LCURL> Lexeme {
Line# 19: Token <ID> Lexeme x
Line# 19: Token <ASSIGNOP> Lexeme =
Line# 19: Token <ID> Lexeme x
Line# 19: Token <ADDOP> Lexeme +
Line# 19: Token <CONST_INT> Lexeme 5
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 20: Token <RCURL> Lexeme }
Line# 21: Token <ELSE> Lexeme else
Line# 21: Token <LCURL> Lexeme {
Line# 22: Token <ID> Lexeme x
Line# 22: Token <ASSIGNOP> Lexeme =
Line# 22: Token <ID> Lexeme x
Line# 22: Token <ADDOP> Lexeme -
Line# 22: Token <CONST_INT> Lexeme 1
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 23: Token <RCURL> Lexeme }
Line# 24: Token <RCURL> Lexeme }
Line# 26: Token <RETURN> Lexeme return
Line# 26: Token <ID> Lexeme x
Line# 26: Token <SEMICOLON> Lexeme ;
Line# 27: Token <RCURL> Lexeme }
Line# 29: Token <INT> Lexeme int
Line# 29: Token <ID> Lexeme main
Line# 29: Token <LPAREN> Lexeme (
Line# 29: Token <RPAREN> Lexeme )
Line# 29: Token <LCURL> Lexeme {
Line# 30: Token <INT> Lexeme int
Line# 30: Token <ID> Lexeme a
Line# 30: Token <COMMA> Lexeme ,
Line# 30: Token <ID> Lexeme b
Line# 30: Token <COMMA> Lexeme ,
Line# 30: Token <ID> Lexeme i
Line# 30: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme a
Line# 31: Token <ASSIGNOP> Lexeme =
Line# 31: Token <CONST_INT> Lexeme 1
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 32: Token <ID> Lexeme b
Line# 32: Token <ASSIGNOP> Lexeme =
Line# 32: Token <CONST_INT> Lexeme 2
Line# 32: Token <SEMICOLON> Lexeme ;
Line# 33: Token <ID> Lexeme a
Line# 33: Token <ASSIGNOP> Lexeme =
Line# 33: Token <ID> Lexeme g
Line# 33: Token <LPAREN> Lexeme (
Line# 33: Token <ID> Lexeme a
Line# 33: Token <COMMA> Lexeme ,
Line# 33: Token <ID> Lexeme b
Line# 33: Token <RPAREN> Lexeme )
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <PRINTLN> Lexeme println
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme a
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 35: Token <FOR> Lexeme for
Line# 35: Token <LPAREN> Lexeme (
Line# 35: Token <ID> Lexeme i
Line# 35: Token <ASSIGNOP> Lexeme =
Line# 35: Token <CONST_INT> Lexeme 0
Line# 35: Token <SEMICOLON> Lexeme ;
Line# 35: Token <ID> Lexeme i
Line# 35: Token <CONST_INT> Lexeme 4
Line# 35: Token <SEMICOLON> Lexeme ;
Line# 35: Token <ID> Lexeme i
Line# 35: Token <INCOP> Lexeme ++
Line# 35: Token <RPAREN> Lexeme )
Line# 35: Token <LCURL> Lexeme {
Line# 36: Token <ID> Lexeme a
Line# 36: Token <ASSIGNOP> Lexeme =
Line# 36: Token <CONST_INT> Lexeme 3
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <WHILE> Lexeme while
Line# 37: Token <LPAREN> Lexeme (
Line# 37: Token <ID> Lexeme a
Line# 37: Token <CONST_INT> Lexeme 0
Line# 37: Token <RPAREN> Lexeme )
Line# 37: Token <LCURL> Lexeme {
Line# 38: Token <ID> Lexeme b
Line# 38: Token <INCOP> Lexeme ++
Line# 38: Token <SEMICOLON> Lexeme ;
Line# 39: Token <ID> Lexeme a
Line# 39: Token <DECOP> Lexeme --
Line# 39: Token <SEMICOLON> Lexeme ;
Line# 40: Token <RCURL> Lexeme }
Line# 41: Token <RCURL> Lexeme }
Line# 42: Token <PRINTLN> Lexeme println
Line# 42: Token <LPAREN> Lexeme (
Line# 42: Token <ID> Lexeme a
Line# 42: Token <RPAREN> Lexeme )
Line# 42: Token <SEMICOLON> Lexeme ;
Line# 43: Token <PRINTLN> Lexeme println
Line# 43: Token <LPAREN> Lexeme (
Line# 43: Token <ID> Lexeme b
Line# 43: Token <RPAREN> Lexeme )
Line# 43: Token <SEMICOLON> Lexeme ;
Line# 44: Token <PRINTLN> Lexeme println
Line# 44: Token <LPAREN> Lexeme (
Line# 44: Token <ID> Lexeme i
Line# 44: Token <RPAREN> Lexeme )
Line# 44: Token <SEMICOLON> Lexeme ;
Line# 45: Token <RETURN> Lexeme return
Line# 45: Token <CONST_INT> Lexeme 0
Line# 45: Token <SEMICOLON> Lexeme ;
Line# 46: Token <RCURL> Lexeme }
