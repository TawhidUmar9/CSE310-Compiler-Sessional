Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 3: Token <LCURL> Lexeme {
Line# 5: Token <INT> Lexeme int
Line# 5: Token <ID> Lexeme k
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme ll
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme m
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme n
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme o
Line# 5: Token <COMMA> Lexeme ,
Line# 5: Token <ID> Lexeme p
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme i
Line# 7: Token <ASSIGNOP> Lexeme =
Line# 7: Token <CONST_INT> Lexeme 1
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <SINGLE LINE COMMENT> Lexeme // println(i);
Line# 10: Token <ID> Lexeme j
Line# 10: Token <ASSIGNOP> Lexeme =
Line# 10: Token <CONST_INT> Lexeme 5
Line# 10: Token <ADDOP> Lexeme +
Line# 10: Token <CONST_INT> Lexeme 8
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 11: Token <SINGLE LINE COMMENT> Lexeme // println(j);
Line# 13: Token <ID> Lexeme k
Line# 13: Token <ASSIGNOP> Lexeme =
Line# 13: Token <ID> Lexeme i
Line# 13: Token <ADDOP> Lexeme +
Line# 13: Token <CONST_INT> Lexeme 2
Line# 13: Token <MULOP> Lexeme *
Line# 13: Token <ID> Lexeme j
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 14: Token <SINGLE LINE COMMENT> Lexeme // println(k);
Line# 16: Token <ID> Lexeme m
Line# 16: Token <ASSIGNOP> Lexeme =
Line# 16: Token <ID> Lexeme k
Line# 16: Token <MULOP> Lexeme %
Line# 16: Token <CONST_INT> Lexeme 9
Line# 16: Token <SEMICOLON> Lexeme ;
Line# 17: Token <SINGLE LINE COMMENT> Lexeme // println(m);
Line# 19: Token <ID> Lexeme n
Line# 19: Token <ASSIGNOP> Lexeme =
Line# 19: Token <ID> Lexeme m
Line# 19: Token <ID> Lexeme ll
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 20: Token <SINGLE LINE COMMENT> Lexeme // println(n);
Line# 22: Token <ID> Lexeme o
Line# 22: Token <ASSIGNOP> Lexeme =
Line# 22: Token <ID> Lexeme i
Line# 22: Token <RELOP> Lexeme !=
Line# 22: Token <ID> Lexeme j
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 23: Token <SINGLE LINE COMMENT> Lexeme // println(o);
Line# 25: Token <ID> Lexeme p
Line# 25: Token <ASSIGNOP> Lexeme =
Line# 25: Token <ID> Lexeme n
Line# 25: Token <LOGICOP> Lexeme ||
Line# 25: Token <ID> Lexeme o
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 26: Token <SINGLE LINE COMMENT> Lexeme // println(p);
Line# 28: Token <ID> Lexeme p
Line# 28: Token <ASSIGNOP> Lexeme =
Line# 28: Token <ID> Lexeme n
Line# 28: Token <ID> Lexeme o
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 29: Token <SINGLE LINE COMMENT> Lexeme // println(p);
Line# 31: Token <ID> Lexeme p
Line# 31: Token <INCOP> Lexeme ++
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 32: Token <SINGLE LINE COMMENT> Lexeme // println(p);
Line# 34: Token <ID> Lexeme k
Line# 34: Token <ASSIGNOP> Lexeme =
Line# 34: Token <ADDOP> Lexeme -
Line# 34: Token <ID> Lexeme p
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 35: Token <SINGLE LINE COMMENT> Lexeme // println(k);
Line# 37: Token <RETURN> Lexeme return
Line# 37: Token <CONST_INT> Lexeme 0
Line# 37: Token <SEMICOLON> Lexeme ;
Line# 38: Token <RCURL> Lexeme }
